#!/data/data/com.termux/files/usr/bin/bash

# Author:  MrAlpha786   (github.com/MrAlpha786)

#colors and other variables.
R='\033[1;31m'
C='\033[0;36m'
B='\033[1;34m'
G='\033[1;32m'
Y='\033[1;33m'
N='\033[0m'
FILE=$(which login)

#Banner
clear
echo
echo -e $B" ┌─────────────────────────┐ "
echo -e $B" │$C TERMUX FINGERPRINT LOCK $B│"
echo -e $B" └─────────────────────────┘ "
echo -e $R"  -> MrAlpha786 "
echo
sleep 1

trap 'echo -e "$N"' 1 15 20

# Check fingerprint
function authenticate() {
  termux-fingerprint | grep -q "AUTH_RESULT_SUCCESS"
}

# Exit on errors
function error_exit() {
  echo -e "$R\n$0: $1$N"
  exit 1
}

# Check deprndency
function dependency() {
  if ! type -p termux-fingerprint &>/dev/null; then
    echo -e "$Y[*] Installing Dependencies$B"
    (apt-get update && apt-get upgrade -y &&apt-get install termux-api -y) || error_exit "NO INTERNET CONNECTION"
  fi

}


#Check if lock already exists.
if grep -q "termux-fingerprint" $FILE; then
  echo -e "$Y[*] Removing Lock\n$R[!] Authentication Required"

  sleep 1
  #Authenticate fingerprint, if success delete lock
  if authenticate; then
    sed -i '/termux-fingerprint/d' $FILE
    # rm -f $0

    echo -e "$G\n[-] Lock Removed$N"
    exit 0

  #else exit
  else
    error_exit "Authenticatiin Error"
  fi

#if lock do not exist. set one
else

  dependency
  echo -e "$G\n[-] Dependencies Installed\n$Y[*] Setting Lock\n$R[!] Authentication Required"

  sleep 1
  #Test if fingerprint working.
  if authenticate; then
    sed -i '2 a termux-fingerprint -c Exit | grep -q "AUTH_RESULT_SUCCESS"; [ $? -ne 0 ] && exit' $FILE

    echo -e "$G\n[-] Lock Set$N"
    exit 0

  #else skip setup and exit
  else
    error_exit "Authenticatiin Error"
  fi
fi

